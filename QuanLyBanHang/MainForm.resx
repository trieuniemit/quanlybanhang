<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbBanHang.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABABJREFUeF7tmV1Mm2UYhokHO/DQcw/kb9KWsoKoQFlbNwa0RfxhMxKmwOhgkZgl
        I8NkZo2wUW22JSQafxItZgsjmMwIBvdbyg489YDNeOBpSQ/NpAcceN++7/a4MLNC263la/tdyZ1+7/Pc
        z/22zdsvX9IyExMTExMTExMTk0exHOSuF44hXD6CePkxckspj/KG9IyMFz5VwwhVD5OZSM/IeOFjGcKa
        JUBaA2iWUkqsR9CivZYA4lIqfGqPYK12iLQfpVNKW6K9WrIsfByDCDkGyUwl44WPvqE1DmCqsR/xxgEy
        Xcl46dH0Pqkly9LD+R6pJcvSw91HGk2uPsTdfQgdzMfzyf5e0qja15uH55OOd0ktWRqCzl60PHhfeXg+
        8b1DasnSMOTtfXUfIvMl2TItspnJird7yHxJtkyLbGaKikNvkVqyLC16evBc75tk7xv8S0q543A3mQtJ
        fFYc7saJ+zmv46aUcsdgF5kLSXzGDPgxMOjHhs7o98Er5eLnqJ/PBnyIBPyk1pAPZ6RV/Iz4YBv24s6I
        jxzxIjnsZb+0cs9oJ/kkkpisGW1n/2gHkjrrgw6sfqi+DGnlh+Pt5JNIYjJGH/njBxB5mKWudU3axc2J
        NtjG2nB37ACprpNjbXk88jvNuPqwJ/chOb6fVK+rJz2wSmtnOPUamY7EnjVBdbxPeRB5mKmudU3aO0fQ
        Q6YjsWdF0AVb0IPfdc5pN5JBVwkd+Qn1YSddSE66yIm9WJ3Y6SOfD4JlfOasE5azrZid2ks+kDryDQa8
        ywct3BVuQTjsRDzsJJ++kAy3GvjIn29G6EIz+XSFfy404c/zTfjyXCuel62MyfSrWJtuIqebtv8vsSj5
        4hVSS5alx9cvk1qyLD2+fYnUkmXp8H09/JF6xmbqSa1IPZZm9qBT2mkTaaA74kB0xoGkyljX19850CVt
        Y3LJgY8vOoBLDnKzdO3iHpwW27aonPH/Z/wnlTMpNmMxVwfPXB0524CNM98w9tFtJLSmvmJM1y7XAXN2
        tIs9JbN18Glvqhy9x2U7/GI3DvO1iP5gV3f+z7F8bpncLF3TvXk7lsSeEuWLbZuj9hK7cbhixfqPNvWb
        v4ZE5IZ63ayrSOheJtoq54oN92Rb4/CTBesLVnLxZyQWlshHtKhqqpeJts4x4BewVIPoLzXkymdY/nWB
        3KyVTxnTPeVZFHtK0swx3k/g2m50Xd9N3qjBxm9TjP0xj4SWvtY11cfVF9Em9pRcr4JXe1Pl6D2Uxyd2
        YxGtxmS0mny8MC62bdHex2eQt6rwidiMye1K+FcqEY1V4N5KBf6OVeLmcgXd0k4bPaNmb93PUFk6J1Ze
        Qv/omJiYmJiYmJiY5JWysn8BGf6R7/NPe1IAAAAASUVORK5CYII=
</value>
  </data>
</root>